---
- name:  Update Cache
  apt:
    update_cache: yes

- name: Disable all swap devices and files at runtime
  shell: swapoff -a
  become: yes

- name: Comment out lines that start with /swap in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^(/swap.*)'
    replace: '# \1'
  become: yes

- name: Create the file containerd.conf if it does not exist
  file:
    path: /etc/modules-load.d/containerd.conf
    state: touch                   
    mode: '0644'                   
    owner: root                    
    group: root

- name: Add some lines to containerd.conf
  lineinfile:
    path: /etc/modules-load.d/containerd.conf  
    line: "{{ item }}"                            
    create: yes                                
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Activate overlay and br-netfilter
  shell: "{{ item }}"
  loop:
    - "modprobe overlay"
    - "modprobe br-netfilter"

- name: Create kubernetes.conf file if it does not exist
  file:
    path: /etc/sysctl.d/kubernetes.conf
    state: touch                   
    mode: '0644'                   
    owner: root                    
    group: root

- name: Add some lines to kubernetes.conf
  lineinfile:
    path: /etc/sysctl.d/kubernetes.conf  
    line: "{{ item }}"                            
    create: yes                                
    state: present
  loop:
    - "net.bridge.bridge-nf-call-ip6tables = 1"
    - "net.bridge.bridge-nf-call-iptables = 1"
    - "net.ipv4.ip_forward = 1"

- name: Run sysctl --system to apply kernel settings
  command: sysctl --system
  become: yes

- name: Install required software packages on all nodes
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - gnupg2
    - software-properties-common
    - apt-transport-https
    - ca-certificates

- name: Ensure keyring dir exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0775'

- name: Get the repo key for Docker
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc

- name: Add the repo for Docker
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Update cache
  apt:
    update_cache: yes
    cache_valid_time: 0

- name: Install containerd
  apt:
    name: containerd.io
    state: present

- name: Configure containerd to start using systemd as cgroup
  shell: |
    containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
  become: yes

- name: Update SystemdCgroup to true in /etc/containerd/config.toml
  shell: |
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  become: yes

- name: Restart containerd service
  systemd:
    name: containerd
    state: restarted

- name: Enable containerd service to start at boot
  systemd:
    name: containerd
    enabled: yes

- name: Get the repo key for Docker
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
    dest: /etc/apt/keyrings/k8s.asc

- name: Add the repo for Kubernetes
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/k8s.asc] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
    state: present

- name: Install Kubernetes
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: APT hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl    

